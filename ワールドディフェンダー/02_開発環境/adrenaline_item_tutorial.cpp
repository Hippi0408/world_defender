//=============================================================================
//
// adrenaline_item_tutorial.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "adrenaline_item_tutorial.h"
#include <assert.h>
#include "convenience_function.h"
#include "read.h"

const float CAdrenalineItemTutorial::RADIUS = 100.0f;
//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CAdrenalineItemTutorial::CAdrenalineItemTutorial()
{
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CAdrenalineItemTutorial::~CAdrenalineItemTutorial()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CAdrenalineItemTutorial::Init()
{
	//初期化
	if (FAILED(C3DObject::Init()))
	{
		assert(false);
	}
	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CAdrenalineItemTutorial::Uninit()
{
	//終了処理
	C3DObject::Uninit();
}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CAdrenalineItemTutorial::Update()
{
	D3DXVECTOR3 rot = GetRot();

	rot.y += D3DXToRadian(5.0f);

	rot = CConvenience_Function::NormalizationRot(rot);

	SetRot(rot);

	//アイテムの更新処理
	C3DObject::Update();
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CAdrenalineItemTutorial::Draw()
{
	//マトリックスの計算
	CalculationMatrix();
	//アイテムの描画処理
	C3DObject::Draw();
}

//*****************************************************************************
// プレイヤーとの当たり判定処理
//*****************************************************************************
bool CAdrenalineItemTutorial::PlayerCollision(D3DXVECTOR3 pos)
{
	//判定
	bool bHit = CConvenience_Function::CircleCollision(GetParentPos(), RADIUS, pos, 0.0f);

	return bHit;
}
